/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: "application"

apply from: 'http://dl.bintray.com/content/shemnon/javafx-gradle/0.4.0/javafx.plugin'
apply plugin: 'eclipse'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenLocal()
    mavenCentral()
    maven{
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

mainClassName = "jp.co.webfrontier.training.worldclock.App"

javafx {
    mainClass = mainClassName
    appID 'WorldClock'
    appName 'WorldClock'

    category = 'games'
    copyright = 'Copyright (c) 2015 Manuel Mauky'
    description = 'A puzzle game where you need to fill all squares with the same color'
    licenseType = 'GPL 3'
    vendor = 'http://www.lestard.eu'
}

dependencies {
    implementation 'de.saxsys:mvvmfx:1.6.0'

    implementation 'de.saxsys:mvvmfx-guice:1.6.0'
    implementation 'com.google.inject:guice:4.2.2'

    implementation 'ch.qos.logback:logback-classic:1.2.3'


    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation 'org.mockito:mockito-all:1.9.5'
}

